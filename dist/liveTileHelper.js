(()=>{"use strict";var t={d:(e,s)=>{for(var i in s)t.o(s,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:s[i]})}};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),t.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),onmessage=async function(t){const s=t.data;switch(s.action){case"draw":const t=await e.dispatch("draw",s.data);postMessage({id:s.id,status:"success",result:t});break;case"init":e.dispatch("init",s.data);break;case"contacts-data":e.dispatch("contactsdata",s.data);break;case"photos-data":e.dispatch("photosdata",s.data);break;case"notifications-data":e.dispatch("notificationsdata",s.data);break;default:console.log("Worker: Unknown action received:",s.action)}};const e={events:{},on:(t,s)=>{e.events[t]||(e.events[t]=[]),e.events[t].push(s)},off:(t,s)=>{e.events[t]&&(e.events[t]=e.events[t].filter((t=>t!==s)))},dispatch:async(t,s)=>{if(e.events[t])try{return await e.events[t][0](s)}catch(e){throw console.error(`Error in dispatch for event '${t}':`,e),e}}},s={STATIC:"static",CAROUSEL:"carousel",NOTIFICATION:"notification",MATRIX:"matrix"};Object.freeze(s);const i={FLIP:"flip",SLIDE:"slide"};Object.freeze(i);class a{constructor(t,e,s){this.id=t||Math.random().toString(36).substring(2,15),this.contentHTML=e,this.background=s}}t.g.liveTileHelper={requestRedraw:function(t){postMessage({action:"requestRedraw",data:t||{}})},requestGoToPage:function(t){postMessage({action:"requestGoToPage",data:t})},requestGoToNextPage:function(){postMessage({action:"requestGoToNextPage"})},requestGoToPreviousPage:function(){postMessage({action:"requestGoToPreviousPage"})},eventListener:e,TileFeed:class{constructor(t={}){const e={type:s.PAGES,animationType:i.FLIP,showAppTitle:!0,duration:5e3+500*Math.random(),noticationCount:null};if(Object.assign(this,e,t),!Object.values(s).includes(this.type))throw new Error(`Invalid tile type. Must be one of: ${Object.values(s).join(", ")}`);this.tiles=[]}Tile(t,e){return new a(Math.random().toString(36).substring(2,15),t,e)}addTile(t){this.tiles.push(t)}getTiles(){return this.tiles}removeTile(t){this.tiles="string"==typeof t?this.tiles.filter((e=>e.id!==t)):this.tiles.filter((e=>e!==t))}stringify(){return JSON.stringify(this)}},Tile:a,TileType:s,AnimationType:i}})();